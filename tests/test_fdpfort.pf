module test_fdpfort
  use funit
  use fdpfort
  implicit none

contains

  @test
  subroutine test_fdp_link_write
    use, intrinsic :: iso_c_binding, only: c_char, c_int
    type(FdpDataPipeline) :: data_pipeline
    character(*, kind=c_char), parameter :: config = "./tests/data/write_csv.yaml"
    character(*, kind=c_char), parameter :: script = "./tests/data/test_script.sh"
    character(*, kind=c_char), parameter :: token_file = "/.fair/registry/token"
    character(*, kind=c_char), parameter :: data_product="tests/csv_fort"
    character(255, kind=c_char) :: home_dir   
    character(255, kind=c_char) :: token
    character(:, kind=c_char), allocatable :: token_path
    character(:, kind=c_char), allocatable :: data_store
    integer(kind=c_int) :: err
    integer :: token_io, data_io

    call getenv("HOME", home_dir)
    token_path = trim(home_dir) // token_file
    open(newunit=token_io, file=token_path)
    read(token_io, *) token
    close(token_io)

    err = fdp_init(data_pipeline, config, script, token)
    @assertEqual(0, err)

    call fdp_link_write(data_pipeline, data_product, data_store, err)
    @assertEqual(0, err)

    open(newunit=data_io, file=data_store)
    write(data_io, *) "Test"
    close(data_io)

    err = fdp_finalise(data_pipeline)
    @assertEqual(0, err)
  end subroutine test_fdp_link_write

end module
